!function(t){"function"==typeof define&&define.amd?define(t):t()}(function(){"use strict";class t extends HTMLElement{constructor(){super();let t=document.createElement("style");t.innerHTML="\n            kaomos-button{\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n        ",document.body.appendChild(t),this.running=!1,this._container=document.createElement("div"),this._container.classList.add("container"),this._container.innerHTML=`\n            <style>\n                .loader{\n                    display: none;\n                    position: ${this._getPostion()};\n                    width: ${this._getWidth()}px;\n                    height:  ${this._getHeight()}px;\n                }\n\n                svg{\n                    animation: rotate ${this.getAttribute("loader-speed")||2.5}s linear infinite;\n                    transform-origin: center center;\n                    height: ${this.getAttribute("loader-size")||"60"}%;\n                    width:  ${this.getAttribute("loader-size")||"60"}%;\n                    position: absolute;\n                    top: 0;\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    margin: auto;\n                    stroke: ${this.getAttribute("loader-color")||"#ffffff"};\n                }\n\n                .path {\n                    stroke-dasharray: 1, 200;\n                    stroke-dashoffset: 0;\n                    animation: dash ${(this.getAttribute("loader-speed")||2.5)-.5}s ease-in-out infinite;\n                    stroke-linecap: round;\n                }\n\n                p{\n                    width: 100%;\n                    height: 100%;\n                    text-align: center;\n                }\n\n                @keyframes rotate {\n                    100% {\n                      transform: rotate(360deg);\n                    }\n                  }\n                  \n                  @keyframes dash {\n                    0% {\n                      stroke-dasharray: 1, 200;\n                      stroke-dashoffset: 0;\n                    }\n                    50% {\n                      stroke-dasharray: 89, 200;\n                      stroke-dashoffset: -35px;\n                    }\n                    100% {\n                      stroke-dasharray: 89, 200;\n                      stroke-dashoffset: -124px;\n                    }\n                  }\n\n                @keyframes rotate{\n                    from{\n                        transform: rotate(0deg);\n                    }\n                    to{\n                        transform: rotate(360deg);\n                    }\n                }\n            </style>\n            <div class="loader">\n                <svg viewBox="25 25 50 50">\n                    <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width=${this.getAttribute("loader-width")||"4"} stroke-miterlimit="10"/>\n                </svg>\n            </div>\n            <p>${this.getAttribute("label")||"Your label"}</p>\n        `,this.attachShadow({mode:"open"}).appendChild(this._container),window.addEventListener("resize",()=>{this.update()})}_getPostion(){return"static"==window.getComputedStyle(this).getPropertyValue("position")?"relative":"static"}_getWidth(){return"relative"==this._getPostion()?String(this.offsetWidth):"300"}_getHeight(){return"relative"==this._getPostion()?String(this.offsetHeight):"50"}update(){if("relative"==this._getPostion()){let t=this._container.getElementsByClassName("loader")[0];t.style.width=`${this._getWidth()}px`,t.style.height=`${this._getHeight()}px`}}isRunning(){return this.running}start(){this.running||(this.running=!0,this._container.getElementsByTagName("p")[0].style.display="none",this._container.getElementsByClassName("loader")[0].style.display="block")}stop(){this.running&&(this._container.getElementsByClassName("loader")[0].style.display="none",this._container.getElementsByTagName("p")[0].style.display="block",this.running=!1)}toggle(){this.running?this.running&&this.stop():this.start()}}document.addEventListener("DOMContentLoaded",()=>{customElements.define("kaomos-button",t)})});